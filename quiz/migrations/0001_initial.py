# Generated by Django 4.2.2 on 2023-06-18 13:23

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="InsertionQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="question id",
                    ),
                ),
                (
                    "insertion_text",
                    models.TextField(verbose_name="text for insertion"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="KeyWord",
            fields=[
                (
                    "name",
                    models.CharField(
                        max_length=30,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="key word",
                    ),
                ),
            ],
            options={
                "verbose_name": "key word",
                "verbose_name_plural": "key words",
            },
        ),
        migrations.CreateModel(
            name="Material",
            fields=[
                (
                    "name",
                    models.CharField(
                        max_length=60, verbose_name="material name"
                    ),
                ),
                (
                    "id",
                    models.BigAutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="material id",
                    ),
                ),
                ("file_name", models.FileField(upload_to="materials/")),
            ],
            options={
                "verbose_name": "material",
                "verbose_name_plural": "materails",
            },
        ),
        migrations.CreateModel(
            name="MCQOption",
            fields=[
                ("text", models.CharField(verbose_name="option text")),
                (
                    "id",
                    models.AutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="option id",
                    ),
                ),
            ],
            options={
                "verbose_name": "Multiple Choice Question option",
                "verbose_name_plural": "Multiple Choice Question options",
            },
        ),
        migrations.CreateModel(
            name="OpenEndedQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="question id",
                    ),
                ),
                ("answer", models.TextField(verbose_name="open answer")),
            ],
            options={
                "verbose_name": "open ended question",
                "verbose_name_plural": "opend ended questions",
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="question id",
                    ),
                ),
                ("text", models.TextField(verbose_name="question text")),
                (
                    "type_id",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "MCQ Question"),
                            (2, "True/False Question"),
                            (3, "Insertion Question"),
                            (4, "Open Ended Question"),
                        ],
                        default=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "question",
                "verbose_name_plural": "questions",
            },
        ),
        migrations.CreateModel(
            name="Quiz",
            fields=[
                ("name", models.TextField()),
                (
                    "id",
                    models.BigAutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="quiz id",
                    ),
                ),
                (
                    "source_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="quiz.material",
                        verbose_name="source id",
                    ),
                ),
            ],
            options={
                "verbose_name": "quiz",
                "verbose_name_plural": "quizzes",
            },
        ),
        migrations.CreateModel(
            name="TrueFalseQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="question id",
                    ),
                ),
                ("answer", models.BooleanField(verbose_name="answer flag")),
            ],
            options={
                "verbose_name": "true/false question",
                "verbose_name_plural": "true/false questions",
            },
        ),
        migrations.CreateModel(
            name="Topic",
            fields=[
                (
                    "name",
                    models.CharField(
                        max_length=42,
                        primary_key=True,
                        serialize=False,
                        verbose_name="topic name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, verbose_name="topic description"
                    ),
                ),
                ("key_words", models.ManyToManyField(to="quiz.keyword")),
            ],
            options={
                "verbose_name": "topic",
                "verbose_name_plural": "topics",
            },
        ),
        migrations.CreateModel(
            name="Take",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        db_index=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="take id",
                    ),
                ),
                ("points", models.FloatField(verbose_name="points")),
                (
                    "passage_date",
                    models.DateField(
                        auto_now_add=True, verbose_name="passage date"
                    ),
                ),
                (
                    "quiz",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="quiz.quiz",
                        verbose_name="quiz id",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user id",
                    ),
                ),
            ],
            options={
                "verbose_name": "take",
                "verbose_name_plural": "takes",
            },
        ),
        migrations.CreateModel(
            name="QuizGroup",
            fields=[
                (
                    "name",
                    models.CharField(max_length=42, verbose_name="group name"),
                ),
                (
                    "id",
                    models.BigAutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="group id",
                    ),
                ),
                ("quizzes", models.ManyToManyField(to="quiz.quiz")),
            ],
            options={
                "verbose_name": "quiz group",
                "verbose_name_plural": "quiz groups",
            },
        ),
        migrations.AddField(
            model_name="quiz",
            name="topic",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="quiz.topic",
                verbose_name="topic",
            ),
        ),
        migrations.AddField(
            model_name="quiz",
            name="users",
            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name="MCQQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="question id",
                    ),
                ),
                ("answer", models.IntegerField(verbose_name="answer id")),
                (
                    "options",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="quiz.mcqoption",
                        verbose_name="options",
                    ),
                ),
            ],
            options={
                "verbose_name": "Multiple Choice Question",
                "verbose_name_plural": "Multiple Choice Questions",
            },
        ),
        migrations.AddField(
            model_name="material",
            name="topic",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="quiz.topic",
                verbose_name="topic",
            ),
        ),
        migrations.CreateModel(
            name="InsertionAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("answer", models.TextField(verbose_name="text to insert")),
                (
                    "position",
                    models.PositiveIntegerField(
                        verbose_name="position offset"
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="quiz.insertionquestion",
                        verbose_name="question id",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InsertionPosition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "position",
                    models.PositiveIntegerField(
                        verbose_name="position offset"
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="quiz.insertionquestion",
                        verbose_name="question id",
                    ),
                ),
            ],
            options={
                "unique_together": {("question", "position")},
            },
        ),
    ]
