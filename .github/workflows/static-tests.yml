name: python-linter
on: [ push, pull_request ]
jobs:
  flake8:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10.2
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8
      - name: Lint with flake8
        run: |
          flake8 $(git ls-files '*.py') --count --select=E9,F63,F7,F82 --exclude=*/migrations/* --show-source --statistics
          flake8 $(git ls-files '*.py') --count --max-complexity=10 --max-line-length=79 --exclude=*/migrations/* --statistics
  pylint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10.2
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint_django
          pip install pylint
          mkdir -p badges
      - name: Run pylint tests and generate badge
        run: |
          anybadge --value= --file=badges/pylint.svg pylint
          echo "ANSWER=$(pylint $(git ls-files '*.py') | sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p')" >> $GITHUB_ENV
      - name: Create the Badge
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 750b9e58a5be2ae717e3bcc117bf6a7e
          filename: answer.json
          label: pylint
          message: is ${{ env.ANSWER }}
          valColorRange: ${{ env.ANSWER }}
          maxColorRange: 10
          minColorRange: 0

