###########
# BUILDER #
###########

FROM python:3.10 as builder

# set the working dir for docker
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    postgresql postgresql-contrib gcc g++ python3-dev

# lint
RUN pip install --upgrade pip
RUN pip install flake8
COPY . .
# RUN flake8 --ignore=E501,F401 .

# install python requirements
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r ./requirements.txt
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r ./QuizGeneratorModel/requirements.txt

#########
# FINAL #
#########

# pull official base image
FROM python:3.10

# define env variables
ENV HOME=/home/app
ENV APP_HOME=$HOME/web

# create directory for the app user
RUN mkdir -p $HOME

# create the app user
RUN addgroup -S app && adduser -S app -G app

# create the appropriate directories
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends gcc g++ subversion \
    libffi-dev libssl-dev openssh-client

COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY scripts/server-entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

# run server-entrypoint.prod.sh
# ENTRYPOINT ["/home/app/web/server-entrypoint.prod.sh"]